// Code generated by go-swagger; DO NOT EDIT.

package volumes

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// NewVolumesGetByIDParams creates a new VolumesGetByIDParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewVolumesGetByIDParams() *VolumesGetByIDParams {
	return &VolumesGetByIDParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewVolumesGetByIDParamsWithTimeout creates a new VolumesGetByIDParams object
// with the ability to set a timeout on a request.
func NewVolumesGetByIDParamsWithTimeout(timeout time.Duration) *VolumesGetByIDParams {
	return &VolumesGetByIDParams{
		timeout: timeout,
	}
}

// NewVolumesGetByIDParamsWithContext creates a new VolumesGetByIDParams object
// with the ability to set a context for a request.
func NewVolumesGetByIDParamsWithContext(ctx context.Context) *VolumesGetByIDParams {
	return &VolumesGetByIDParams{
		Context: ctx,
	}
}

// NewVolumesGetByIDParamsWithHTTPClient creates a new VolumesGetByIDParams object
// with the ability to set a custom HTTPClient for a request.
func NewVolumesGetByIDParamsWithHTTPClient(client *http.Client) *VolumesGetByIDParams {
	return &VolumesGetByIDParams{
		HTTPClient: client,
	}
}

/*
VolumesGetByIDParams contains all the parameters to send to the API endpoint

	for the volumes get by id operation.

	Typically these are written to a http.Request.
*/
type VolumesGetByIDParams struct {

	/* AppName.

	   Fly App Name
	*/
	AppName string

	/* VolumeID.

	   Volume ID
	*/
	VolumeID string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the volumes get by id params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *VolumesGetByIDParams) WithDefaults() *VolumesGetByIDParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the volumes get by id params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *VolumesGetByIDParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the volumes get by id params
func (o *VolumesGetByIDParams) WithTimeout(timeout time.Duration) *VolumesGetByIDParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the volumes get by id params
func (o *VolumesGetByIDParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the volumes get by id params
func (o *VolumesGetByIDParams) WithContext(ctx context.Context) *VolumesGetByIDParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the volumes get by id params
func (o *VolumesGetByIDParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the volumes get by id params
func (o *VolumesGetByIDParams) WithHTTPClient(client *http.Client) *VolumesGetByIDParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the volumes get by id params
func (o *VolumesGetByIDParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithAppName adds the appName to the volumes get by id params
func (o *VolumesGetByIDParams) WithAppName(appName string) *VolumesGetByIDParams {
	o.SetAppName(appName)
	return o
}

// SetAppName adds the appName to the volumes get by id params
func (o *VolumesGetByIDParams) SetAppName(appName string) {
	o.AppName = appName
}

// WithVolumeID adds the volumeID to the volumes get by id params
func (o *VolumesGetByIDParams) WithVolumeID(volumeID string) *VolumesGetByIDParams {
	o.SetVolumeID(volumeID)
	return o
}

// SetVolumeID adds the volumeId to the volumes get by id params
func (o *VolumesGetByIDParams) SetVolumeID(volumeID string) {
	o.VolumeID = volumeID
}

// WriteToRequest writes these params to a swagger request
func (o *VolumesGetByIDParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param app_name
	if err := r.SetPathParam("app_name", o.AppName); err != nil {
		return err
	}

	// path param volume_id
	if err := r.SetPathParam("volume_id", o.VolumeID); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
