{
    "schemes": ["https"],
    "consumes": [
        "application/json"
    ],
    "produces": [
        "application/json"
    ],
    "swagger": "2.0",
    "info": {
        "description": "",
        "title": "Fly Machines API",
        "contact": {},
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "1.0"
    },
    "host": "api.machines.dev",
    "basePath": "/v1",
    "paths": {
        "/apps": {
            "get": {
                "tags": [
                    "Apps"
                ],
                "operationId": "Apps_list",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The org slug, or 'personal', to filter apps",
                        "name": "org_slug",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ListAppsResponse"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Apps"
                ],
                "operationId": "Apps_create",
                "parameters": [
                    {
                        "description": "App body",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CreateAppRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/apps/{app_name}": {
            "get": {
                "tags": [
                    "Apps"
                ],
                "operationId": "Apps_show",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Fly App Name",
                        "name": "app_name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/App"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Apps"
                ],
                "operationId": "Apps_delete",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Fly App Name",
                        "name": "app_name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted"
                    }
                }
            }
        },
        "/apps/{app_name}/machines": {
            "get": {
                "tags": [
                    "Machines"
                ],
                "operationId": "Machines_list",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Fly App Name",
                        "name": "app_name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "boolean",
                        "description": "Include deleted machines",
                        "name": "include_deleted",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Region filter",
                        "name": "region",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Machine"
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Machines"
                ],
                "operationId": "Machines_create",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Fly App Name",
                        "name": "app_name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Create machine request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CreateMachineRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Machine"
                        }
                    }
                }
            }
        },
        "/apps/{app_name}/machines/{machine_id}": {
            "get": {
                "tags": [
                    "Machines"
                ],
                "operationId": "Machines_show",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Fly App Name",
                        "name": "app_name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Machine ID",
                        "name": "machine_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Machine"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Machines"
                ],
                "operationId": "Machines_update",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Fly App Name",
                        "name": "app_name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Machine ID",
                        "name": "machine_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Request body",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/UpdateMachineRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Machine"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Machines"
                ],
                "operationId": "Machines_delete",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Fly App Name",
                        "name": "app_name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Machine ID",
                        "name": "machine_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/apps/{app_name}/machines/{machine_id}/cordon": {
            "post": {
                "description": "“Cordoning” a machine refers to disabling its services, so the proxy won’t route requests to it. In flyctl this is used by blue/green deployments; one set of machines is started up with services disabled, and when they are all healthy, the services are enabled on the new machines and disabled on the old ones.",
                "tags": [
                    "Machines"
                ],
                "operationId": "Machines_cordon",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Fly App Name",
                        "name": "app_name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Machine ID",
                        "name": "machine_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/apps/{app_name}/machines/{machine_id}/events": {
            "get": {
                "tags": [
                    "Machines"
                ],
                "operationId": "Machines_list_events",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Fly App Name",
                        "name": "app_name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Machine ID",
                        "name": "machine_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/MachineEvent"
                            }
                        }
                    }
                }
            }
        },
        "/apps/{app_name}/machines/{machine_id}/exec": {
            "post": {
                "produces": [
                    "application/octet-stream",
                    "application/json"
                ],
                "tags": [
                    "Machines"
                ],
                "operationId": "Machines_exec",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Fly App Name",
                        "name": "app_name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Machine ID",
                        "name": "machine_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Request body",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/MachineExecRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Raw command output bytes are written back",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/apps/{app_name}/machines/{machine_id}/lease": {
            "get": {
                "tags": [
                    "Machines"
                ],
                "operationId": "Machines_show_lease",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Fly App Name",
                        "name": "app_name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Machine ID",
                        "name": "machine_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Lease"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Machines"
                ],
                "operationId": "Machines_create_lease",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Fly App Name",
                        "name": "app_name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Machine ID",
                        "name": "machine_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Request body",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CreateLeaseRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Lease"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Machines"
                ],
                "operationId": "Machines_release_lease",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Fly App Name",
                        "name": "app_name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Machine ID",
                        "name": "machine_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/apps/{app_name}/machines/{machine_id}/metadata": {
            "get": {
                "tags": [
                    "Machines"
                ],
                "operationId": "Machines_show_metadata",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Fly App Name",
                        "name": "app_name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Machine ID",
                        "name": "machine_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/apps/{app_name}/machines/{machine_id}/metadata/{key}": {
            "post": {
                "tags": [
                    "Machines"
                ],
                "operationId": "Machines_update_metadata",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Fly App Name",
                        "name": "app_name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Machine ID",
                        "name": "machine_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Metadata Key",
                        "name": "key",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Machines"
                ],
                "operationId": "Machines_delete_metadata",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Fly App Name",
                        "name": "app_name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Machine ID",
                        "name": "machine_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Metadata Key",
                        "name": "key",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                }
            }
        },
        "/apps/{app_name}/machines/{machine_id}/ps": {
            "get": {
                "tags": [
                    "Machines"
                ],
                "operationId": "Machines_list_processes",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Fly App Name",
                        "name": "app_name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Machine ID",
                        "name": "machine_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Sort by",
                        "name": "sort_by",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Order",
                        "name": "order",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ProcessStat"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/apps/{app_name}/machines/{machine_id}/restart": {
            "post": {
                "tags": [
                    "Machines"
                ],
                "operationId": "Machines_restart",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Fly App Name",
                        "name": "app_name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Machine ID",
                        "name": "machine_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Restart timeout as a Go duration string or number of seconds",
                        "name": "timeout",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/apps/{app_name}/machines/{machine_id}/signal": {
            "post": {
                "tags": [
                    "Machines"
                ],
                "operationId": "Machines_signal",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Fly App Name",
                        "name": "app_name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Machine ID",
                        "name": "machine_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Request body",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SignalRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/apps/{app_name}/machines/{machine_id}/start": {
            "post": {
                "tags": [
                    "Machines"
                ],
                "operationId": "Machines_start",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Fly App Name",
                        "name": "app_name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Machine ID",
                        "name": "machine_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/apps/{app_name}/machines/{machine_id}/stop": {
            "post": {
                "tags": [
                    "Machines"
                ],
                "operationId": "Machines_stop",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Fly App Name",
                        "name": "app_name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Machine ID",
                        "name": "machine_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Optional request body",
                        "name": "request",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/StopRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/apps/{app_name}/machines/{machine_id}/uncordon": {
            "post": {
                "description": "“Cordoning” a machine refers to disabling its services, so the proxy won’t route requests to it. In flyctl this is used by blue/green deployments; one set of machines is started up with services disabled, and when they are all healthy, the services are enabled on the new machines and disabled on the old ones.",
                "tags": [
                    "Machines"
                ],
                "operationId": "Machines_uncordon",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Fly App Name",
                        "name": "app_name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Machine ID",
                        "name": "machine_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/apps/{app_name}/machines/{machine_id}/versions": {
            "get": {
                "tags": [
                    "Machines"
                ],
                "operationId": "Machines_list_versions",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Fly App Name",
                        "name": "app_name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Machine ID",
                        "name": "machine_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/MachineVersion"
                            }
                        }
                    }
                }
            }
        },
        "/apps/{app_name}/machines/{machine_id}/wait": {
            "get": {
                "tags": [
                    "Machines"
                ],
                "operationId": "Machines_wait",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Fly App Name",
                        "name": "app_name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Machine ID",
                        "name": "machine_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "instance? version? TODO",
                        "name": "instance_id",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "wait timeout. default 60s",
                        "name": "timeout",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "started",
                            "stopped",
                            "destroyed"
                        ],
                        "type": "string",
                        "description": "desired state",
                        "name": "state",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/apps/{app_name}/volumes": {
            "get": {
                "tags": [
                    "Volumes"
                ],
                "operationId": "Volumes_list",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Fly App Name",
                        "name": "app_name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Volume"
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Volumes"
                ],
                "operationId": "Volumes_create",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Fly App Name",
                        "name": "app_name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Request body",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CreateVolumeRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Volume"
                        }
                    }
                }
            }
        },
        "/apps/{app_name}/volumes/{volume_id}": {
            "get": {
                "tags": [
                    "Volumes"
                ],
                "operationId": "Volumes_get_by_id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Fly App Name",
                        "name": "app_name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Volume ID",
                        "name": "volume_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Volume"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Volumes"
                ],
                "operationId": "Volumes_update",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Fly App Name",
                        "name": "app_name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Volume ID",
                        "name": "volume_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Request body",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/UpdateVolumeRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Volume"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Volumes"
                ],
                "operationId": "Volume_delete",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Fly App Name",
                        "name": "app_name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Volume ID",
                        "name": "volume_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Volume"
                        }
                    }
                }
            }
        },
        "/apps/{app_name}/volumes/{volume_id}/extend": {
            "put": {
                "tags": [
                    "Volumes"
                ],
                "operationId": "Volumes_extend",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Fly App Name",
                        "name": "app_name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Volume ID",
                        "name": "volume_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Request body",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ExtendVolumeRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ExtendVolumeResponse"
                        }
                    }
                }
            }
        },
        "/apps/{app_name}/volumes/{volume_id}/snapshots": {
            "get": {
                "tags": [
                    "Volumes"
                ],
                "operationId": "Volumes_list_snapshots",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Fly App Name",
                        "name": "app_name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Volume ID",
                        "name": "volume_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/VolumeSnapshot"
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Volumes"
                ],
                "operationId": "createVolumeSnapshot",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Fly App Name",
                        "name": "app_name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Volume ID",
                        "name": "volume_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        }
    },
    "definitions": {
        "App": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "organization": {
                    "$ref": "#/definitions/Organization"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "CheckStatus": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "output": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "CreateAppRequest": {
            "type": "object",
            "properties": {
                "app_name": {
                    "type": "string"
                },
                "app_role_id": {
                    "type": "string"
                },
                "network": {
                    "type": "string"
                },
                "org_slug": {
                    "type": "string"
                }
            }
        },
        "CreateLeaseRequest": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "ttl": {
                    "type": "integer"
                }
            }
        },
        "CreateMachineRequest": {
            "type": "object",
            "properties": {
                "config": {
                    "description": "An object defining the Machine configuration",
                    "allOf": [
                        {
                            "$ref": "#/definitions/api.MachineConfig"
                        }
                    ]
                },
                "lease_ttl": {
                    "type": "integer"
                },
                "lsvd": {
                    "type": "boolean"
                },
                "name": {
                    "description": "Unique name for this Machine. If omitted, one is generated for you",
                    "type": "string"
                },
                "region": {
                    "description": "The target region. Omitting this param launches in the same region as your WireGuard peer connection (somewhere near you).",
                    "type": "string"
                },
                "skip_launch": {
                    "type": "boolean"
                },
                "skip_service_registration": {
                    "type": "boolean"
                }
            }
        },
        "CreateVolumeRequest": {
            "type": "object",
            "properties": {
                "compute": {
                    "$ref": "#/definitions/api.MachineGuest"
                },
                "encrypted": {
                    "type": "boolean"
                },
                "fstype": {
                    "type": "string"
                },
                "machines_only": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "region": {
                    "type": "string"
                },
                "require_unique_zone": {
                    "type": "boolean"
                },
                "size_gb": {
                    "type": "integer"
                },
                "snapshot_id": {
                    "description": "restore from snapshot",
                    "type": "string"
                },
                "snapshot_retention": {
                    "type": "integer"
                },
                "source_volume_id": {
                    "description": "fork from remote volume",
                    "type": "string"
                }
            }
        },
        "ErrorResponse": {
            "type": "object",
            "properties": {
                "details": {
                    "description": "Deprecated"
                },
                "error": {
                    "type": "string"
                },
                "status": {
                    "$ref": "#/definitions/main.statusCode"
                }
            }
        },
        "ExtendVolumeRequest": {
            "type": "object",
            "properties": {
                "size_gb": {
                    "type": "integer"
                }
            }
        },
        "ExtendVolumeResponse": {
            "type": "object",
            "properties": {
                "needs_restart": {
                    "type": "boolean"
                },
                "volume": {
                    "$ref": "#/definitions/Volume"
                }
            }
        },
        "ImageRef": {
            "type": "object",
            "properties": {
                "digest": {
                    "type": "string"
                },
                "labels": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "registry": {
                    "type": "string"
                },
                "repository": {
                    "type": "string"
                },
                "tag": {
                    "type": "string"
                }
            }
        },
        "Lease": {
            "type": "object",
            "properties": {
                "description": {
                    "description": "Description or reason for the Lease.",
                    "type": "string"
                },
                "expires_at": {
                    "description": "ExpiresAt is the unix timestamp in UTC to denote when the Lease will no longer be valid.",
                    "type": "integer"
                },
                "nonce": {
                    "description": "Nonce is the unique ID autogenerated and associated with the Lease.",
                    "type": "string"
                },
                "owner": {
                    "description": "Owner is the user identifier which acquired the Lease.",
                    "type": "string"
                },
                "version": {
                    "description": "Machine version",
                    "type": "string"
                }
            }
        },
        "ListApp": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "machine_count": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "network": {}
            }
        },
        "ListAppsResponse": {
            "type": "object",
            "properties": {
                "apps": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ListApp"
                    }
                },
                "total_apps": {
                    "type": "integer"
                }
            }
        },
        "ListenSocket": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "proto": {
                    "type": "string"
                }
            }
        },
        "Machine": {
            "type": "object",
            "properties": {
                "checks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/CheckStatus"
                    }
                },
                "config": {
                    "$ref": "#/definitions/api.MachineConfig"
                },
                "created_at": {
                    "type": "string"
                },
                "events": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/MachineEvent"
                    }
                },
                "id": {
                    "type": "string"
                },
                "image_ref": {
                    "$ref": "#/definitions/ImageRef"
                },
                "instance_id": {
                    "description": "InstanceID is unique for each version of the machine",
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "nonce": {
                    "description": "Nonce is only every returned on machine creation if a lease_duration was provided.",
                    "type": "string"
                },
                "private_ip": {
                    "description": "PrivateIP is the internal 6PN address of the machine.",
                    "type": "string"
                },
                "region": {
                    "type": "string"
                },
                "state": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "MachineEvent": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "request": {},
                "source": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "timestamp": {
                    "type": "integer"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "MachineExecRequest": {
            "type": "object",
            "properties": {
                "cmd": {
                    "description": "Deprecated: use Command instead",
                    "type": "string"
                },
                "command": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "timeout": {
                    "type": "integer"
                }
            }
        },
        "MachineVersion": {
            "type": "object",
            "properties": {
                "user_config": {
                    "$ref": "#/definitions/api.MachineConfig"
                },
                "version": {
                    "type": "string"
                }
            }
        },
        "Organization": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "slug": {
                    "type": "string"
                }
            }
        },
        "ProcessStat": {
            "type": "object",
            "properties": {
                "command": {
                    "type": "string"
                },
                "cpu": {
                    "type": "integer"
                },
                "directory": {
                    "type": "string"
                },
                "listen_sockets": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ListenSocket"
                    }
                },
                "pid": {
                    "type": "integer"
                },
                "rss": {
                    "type": "integer"
                },
                "rtime": {
                    "type": "integer"
                },
                "stime": {
                    "type": "integer"
                }
            }
        },
        "SignalRequest": {
            "type": "object",
            "properties": {
                "signal": {
                    "type": "string",
                    "enum": [
                        "SIGABRT",
                        "SIGALRM",
                        "SIGFPE",
                        "SIGHUP",
                        "SIGILL",
                        "SIGINT",
                        "SIGKILL",
                        "SIGPIPE",
                        "SIGQUIT",
                        "SIGSEGV",
                        "SIGTERM",
                        "SIGTRAP",
                        "SIGUSR1"
                    ]
                }
            }
        },
        "StopRequest": {
            "type": "object",
            "properties": {
                "signal": {
                    "type": "string"
                },
                "timeout": {
                    "type": "string"
                }
            }
        },
        "UpdateMachineRequest": {
            "type": "object",
            "properties": {
                "config": {
                    "description": "An object defining the Machine configuration",
                    "allOf": [
                        {
                            "$ref": "#/definitions/api.MachineConfig"
                        }
                    ]
                },
                "current_version": {
                    "type": "string"
                },
                "lease_ttl": {
                    "type": "integer"
                },
                "lsvd": {
                    "type": "boolean"
                },
                "name": {
                    "description": "Unique name for this Machine. If omitted, one is generated for you",
                    "type": "string"
                },
                "region": {
                    "description": "The target region. Omitting this param launches in the same region as your WireGuard peer connection (somewhere near you).",
                    "type": "string"
                },
                "skip_launch": {
                    "type": "boolean"
                },
                "skip_service_registration": {
                    "type": "boolean"
                }
            }
        },
        "UpdateVolumeRequest": {
            "type": "object",
            "properties": {
                "snapshot_retention": {
                    "type": "integer"
                }
            }
        },
        "Volume": {
            "type": "object",
            "properties": {
                "attached_alloc_id": {
                    "type": "string"
                },
                "attached_machine_id": {
                    "type": "string"
                },
                "block_size": {
                    "type": "integer"
                },
                "blocks": {
                    "type": "integer"
                },
                "blocks_avail": {
                    "type": "integer"
                },
                "blocks_free": {
                    "type": "integer"
                },
                "created_at": {
                    "type": "string"
                },
                "encrypted": {
                    "type": "boolean"
                },
                "fstype": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "region": {
                    "type": "string"
                },
                "size_gb": {
                    "type": "integer"
                },
                "snapshot_retention": {
                    "type": "integer"
                },
                "state": {
                    "type": "string"
                },
                "zone": {
                    "type": "string"
                }
            }
        },
        "VolumeSnapshot": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "digest": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "size": {
                    "type": "integer"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "api.DNSConfig": {
            "type": "object",
            "properties": {
                "skip_registration": {
                    "type": "boolean"
                }
            }
        },
        "api.File": {
            "description": "A file that will be written to the Machine. One of RawValue or SecretName must be set.",
            "type": "object",
            "properties": {
                "guest_path": {
                    "description": "GuestPath is the path on the machine where the file will be written and must be an absolute path.\nFor example: /full/path/to/file.json",
                    "type": "string"
                },
                "raw_value": {
                    "description": "The base64 encoded string of the file contents.",
                    "type": "string"
                },
                "secret_name": {
                    "description": "The name of the secret that contains the base64 encoded file contents.",
                    "type": "string"
                }
            }
        },
        "api.HTTPOptions": {
            "type": "object",
            "properties": {
                "compress": {
                    "type": "boolean"
                },
                "h2_backend": {
                    "type": "boolean"
                },
                "response": {
                    "$ref": "#/definitions/api.HTTPResponseOptions"
                }
            }
        },
        "api.HTTPResponseOptions": {
            "type": "object",
            "properties": {
                "headers": {
                    "type": "object",
                    "additionalProperties": {}
                }
            }
        },
        "api.MachineCheck": {
            "description": "An optional object that defines one or more named checks. The key for each check is the check name.",
            "type": "object",
            "properties": {
                "grace_period": {
                    "description": "The time to wait after a VM starts before checking its health",
                    "type": "string"
                },
                "headers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/api.MachineHTTPHeader"
                    }
                },
                "interval": {
                    "description": "The time between connectivity checks",
                    "type": "string"
                },
                "method": {
                    "description": "For http checks, the HTTP method to use to when making the request",
                    "type": "string"
                },
                "path": {
                    "description": "For http checks, the path to send the request to",
                    "type": "string"
                },
                "port": {
                    "description": "The port to connect to, often the same as internal_port",
                    "type": "integer"
                },
                "protocol": {
                    "description": "For http checks, whether to use http or https",
                    "type": "string"
                },
                "timeout": {
                    "description": "The maximum time a connection can take before being reported as failing its health check",
                    "type": "string"
                },
                "tls_server_name": {
                    "description": "If the protocol is https, the hostname to use for TLS certificate validation",
                    "type": "string"
                },
                "tls_skip_verify": {
                    "description": "For http checks with https protocol, whether or not to verify the TLS certificate",
                    "type": "boolean"
                },
                "type": {
                    "description": "tcp or http",
                    "type": "string"
                }
            }
        },
        "api.MachineConfig": {
            "type": "object",
            "properties": {
                "auto_destroy": {
                    "description": "Optional boolean telling the Machine to destroy itself once it’s complete (default false)",
                    "type": "boolean"
                },
                "checks": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/definitions/api.MachineCheck"
                    }
                },
                "disable_machine_autostart": {
                    "description": "Deprecated: use Service.Autostart instead",
                    "type": "boolean"
                },
                "dns": {
                    "$ref": "#/definitions/api.DNSConfig"
                },
                "env": {
                    "description": "An object filled with key/value pairs to be set as environment variables",
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "files": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/api.File"
                    }
                },
                "guest": {
                    "$ref": "#/definitions/api.MachineGuest"
                },
                "image": {
                    "description": "The docker image to run",
                    "type": "string"
                },
                "init": {
                    "$ref": "#/definitions/api.MachineInit"
                },
                "metadata": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "metrics": {
                    "$ref": "#/definitions/api.MachineMetrics"
                },
                "mounts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/api.MachineMount"
                    }
                },
                "processes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/api.MachineProcess"
                    }
                },
                "restart": {
                    "$ref": "#/definitions/api.MachineRestart"
                },
                "schedule": {
                    "type": "string"
                },
                "services": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/api.MachineService"
                    }
                },
                "size": {
                    "description": "Deprecated: use Guest instead",
                    "type": "string"
                },
                "standbys": {
                    "description": "Standbys enable a machine to be a standby for another. In the event of a hardware failure,\nthe standby machine will be started.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "statics": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/api.Static"
                    }
                },
                "stop_config": {
                    "$ref": "#/definitions/api.StopConfig"
                }
            }
        },
        "api.MachineGuest": {
            "type": "object",
            "properties": {
                "cpu_kind": {
                    "type": "string"
                },
                "cpus": {
                    "type": "integer"
                },
                "gpu_kind": {
                    "type": "string"
                },
                "host_dedication_id": {
                    "type": "string"
                },
                "kernel_args": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "memory_mb": {
                    "type": "integer"
                }
            }
        },
        "api.MachineHTTPHeader": {
            "description": "For http checks, an array of objects with string field Name and array of strings field Values. The key/value pairs specify header and header values that will get passed with the check call.",
            "type": "object",
            "properties": {
                "name": {
                    "description": "The header name",
                    "type": "string"
                },
                "values": {
                    "description": "The header value",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "api.MachineInit": {
            "type": "object",
            "properties": {
                "cmd": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "entrypoint": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "exec": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "kernel_args": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "swap_size_mb": {
                    "type": "integer"
                },
                "tty": {
                    "type": "boolean"
                }
            }
        },
        "api.MachineMetrics": {
            "type": "object",
            "properties": {
                "path": {
                    "type": "string"
                },
                "port": {
                    "type": "integer"
                }
            }
        },
        "api.MachineMount": {
            "type": "object",
            "properties": {
                "add_size_gb": {
                    "type": "integer"
                },
                "encrypted": {
                    "type": "boolean"
                },
                "extend_threshold_percent": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "path": {
                    "type": "string"
                },
                "size_gb": {
                    "type": "integer"
                },
                "size_gb_limit": {
                    "type": "integer"
                },
                "volume": {
                    "type": "string"
                }
            }
        },
        "api.MachinePort": {
            "type": "object",
            "properties": {
                "end_port": {
                    "type": "integer"
                },
                "force_https": {
                    "type": "boolean"
                },
                "handlers": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "http_options": {
                    "$ref": "#/definitions/api.HTTPOptions"
                },
                "port": {
                    "type": "integer"
                },
                "proxy_proto_options": {
                    "$ref": "#/definitions/api.ProxyProtoOptions"
                },
                "start_port": {
                    "type": "integer"
                },
                "tls_options": {
                    "$ref": "#/definitions/api.TLSOptions"
                }
            }
        },
        "api.MachineProcess": {
            "type": "object",
            "properties": {
                "cmd": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "entrypoint": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "env": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "exec": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "user": {
                    "type": "string"
                }
            }
        },
        "api.MachineRestart": {
            "description": "The Machine restart policy defines whether and how flyd restarts a Machine after its main process exits. See https://fly.io/docs/machines/guides-examples/machine-restart-policy/.",
            "type": "object",
            "properties": {
                "max_retries": {
                    "description": "When policy is on-failure, the maximum number of times to attempt to restart the Machine before letting it stop.",
                    "type": "integer"
                },
                "policy": {
                    "description": "* no - Never try to restart a Machine automatically when its main process exits, whether that’s on purpose or on a crash.\n* always - Always restart a Machine automatically and never let it enter a stopped state, even when the main process exits cleanly.\n* on-failure - Try up to MaxRetries times to automatically restart the Machine if it exits with a non-zero exit code. Default when no explicit policy is set, and for Machines with schedules.",
                    "type": "string",
                    "enum": [
                        "no",
                        "always",
                        "on-failure"
                    ]
                }
            }
        },
        "api.MachineService": {
            "type": "object",
            "properties": {
                "autostart": {
                    "type": "boolean"
                },
                "autostop": {
                    "type": "boolean"
                },
                "checks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/api.MachineCheck"
                    }
                },
                "concurrency": {
                    "$ref": "#/definitions/api.MachineServiceConcurrency"
                },
                "force_instance_description": {
                    "type": "string"
                },
                "force_instance_key": {
                    "type": "string"
                },
                "internal_port": {
                    "type": "integer"
                },
                "min_machines_running": {
                    "type": "integer"
                },
                "ports": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/api.MachinePort"
                    }
                },
                "protocol": {
                    "type": "string"
                }
            }
        },
        "api.MachineServiceConcurrency": {
            "type": "object",
            "properties": {
                "hard_limit": {
                    "type": "integer"
                },
                "soft_limit": {
                    "type": "integer"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "api.ProxyProtoOptions": {
            "type": "object",
            "properties": {
                "version": {
                    "type": "string"
                }
            }
        },
        "api.Static": {
            "type": "object",
            "required": [
                "guest_path",
                "url_prefix"
            ],
            "properties": {
                "guest_path": {
                    "type": "string"
                },
                "url_prefix": {
                    "type": "string"
                }
            }
        },
        "api.StopConfig": {
            "type": "object",
            "properties": {
                "signal": {
                    "type": "string"
                },
                "timeout": {
                    "type": "string"
                }
            }
        },
        "api.TLSOptions": {
            "type": "object",
            "properties": {
                "alpn": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "default_self_signed": {
                    "type": "boolean"
                },
                "versions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "main.statusCode": {
            "type": "string",
            "enum": [
                "unknown",
                "insufficient_capacity"
            ],
            "x-enum-varnames": [
                "unknown",
                "capacityErr"
            ]
        }
    },
    "externalDocs": {
        "url": "https://fly.io/docs/machines/working-with-machines/"
    }
}