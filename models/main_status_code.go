// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// MainStatusCode main status code
//
// swagger:model main.statusCode
type MainStatusCode string

func NewMainStatusCode(value MainStatusCode) *MainStatusCode {
	return &value
}

// Pointer returns a pointer to a freshly-allocated MainStatusCode.
func (m MainStatusCode) Pointer() *MainStatusCode {
	return &m
}

const (

	// MainStatusCodeUnknown captures enum value "unknown"
	MainStatusCodeUnknown MainStatusCode = "unknown"

	// MainStatusCodeInsufficientCapacity captures enum value "insufficient_capacity"
	MainStatusCodeInsufficientCapacity MainStatusCode = "insufficient_capacity"
)

// for schema
var mainStatusCodeEnum []interface{}

func init() {
	var res []MainStatusCode
	if err := json.Unmarshal([]byte(`["unknown","insufficient_capacity"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		mainStatusCodeEnum = append(mainStatusCodeEnum, v)
	}
}

func (m MainStatusCode) validateMainStatusCodeEnum(path, location string, value MainStatusCode) error {
	if err := validate.EnumCase(path, location, value, mainStatusCodeEnum, true); err != nil {
		return err
	}
	return nil
}

// Validate validates this main status code
func (m MainStatusCode) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateMainStatusCodeEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// ContextValidate validates this main status code based on context it is used
func (m MainStatusCode) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}
